# Any arguments with default values need to be defined here to be usable in both stages.
ARG PROXY_HOST=ep.threatpulse.net
ARG PROXY_PORT=80
ARG NODE_EXTRA_CA_CERTS=/usr/local/share/ca-certificates/wss.crt

# These are automatically usable in all stages:
ARG http_proxy=http://${PROXY_HOST}:${PROXY_PORT}
ARG https_proxy=http://${PROXY_HOST}:${PROXY_PORT}
ARG no_proxy=172.0.0.0/8,.googleapis.com,.cloudendpointsapis.com,.oncp.dev,.cluster.local,.svc

# Custom args shared between both stagess:
ARG PROXY_ARGS="--proxy_host=${PROXY_HOST} --proxy_port=${PROXY_PORT} --proxy=http"
ARG SDK_VERSION=30

FROM harbor.mgmt-bld.oncp.dev/base_images/alpine:3.12.0 AS plugin-builder

RUN wget -O /opt/nexus3-github-oauth-plugin.kar https://github.com/larscheid-schmitzhermes/nexus3-github-oauth-plugin/releases/download/3.0.0/nexus3-github-oauth-plugin.kar

FROM adoptopenjdk/openjdk8:alpine AS java-cacerts

FROM registry.access.redhat.com/ubi8/ubi-minimal

LABEL name="Nexus Repository Manager" \
      maintainer="Sonatype <support@sonatype.com>" \
      vendor=Sonatype \
      version="3.53.0-01" \
      release="3.53.0" \
      url="https://sonatype.com" \
      summary="The Nexus Repository Manager server \
          with universal support for popular component formats." \
      description="The Nexus Repository Manager server \
          with universal support for popular component formats." \
      run="docker run -d --name NAME \
          -p 8081:8081 \
          IMAGE" \
      stop="docker stop NAME" \
      com.sonatype.license="Apache License, Version 2.0" \
      com.sonatype.name="Nexus Repository Manager base image" \
      io.k8s.description="The Nexus Repository Manager server \
          with universal support for popular component formats." \
      io.k8s.display-name="Nexus Repository Manager" \
      io.openshift.expose-services="8081:8081" \
      io.openshift.tags="Sonatype,Nexus,Repository Manager"

ARG NEXUS_VERSION=3.53.0-01
ARG NEXUS_DOWNLOAD_URL=https://download.sonatype.com/nexus/3/nexus-${NEXUS_VERSION}-unix.tar.gz
ARG NEXUS_DOWNLOAD_SHA256_HASH=a91f32f3a3f95611006978888f621164c0a02dda5dce6b099781b8819ab59075

# configure nexus runtime
ENV SONATYPE_DIR=/opt/sonatype
ENV NEXUS_HOME=${SONATYPE_DIR}/nexus \
    NEXUS_DATA=/nexus-data \
    NEXUS_CONTEXT='' \
    SONATYPE_WORK=${SONATYPE_DIR}/sonatype-work \
    DOCKER_TYPE='rh-docker'

# Install Java & tar
RUN microdnf update -y \
    && microdnf --setopt=install_weak_deps=0 --setopt=tsflags=nodocs install -y \
          java-1.8.0-openjdk-headless tar procps shadow-utils gzip \
    && microdnf clean all \
    && groupadd --gid 200 -r nexus \
    && useradd --uid 200 -r nexus -g nexus -s /bin/false -d /opt/sonatype/nexus -c 'Nexus Repository Manager user'

WORKDIR ${SONATYPE_DIR}

# Download nexus & setup directories
RUN curl -L ${NEXUS_DOWNLOAD_URL} --output nexus-${NEXUS_VERSION}-unix.tar.gz \
    && echo "${NEXUS_DOWNLOAD_SHA256_HASH} nexus-${NEXUS_VERSION}-unix.tar.gz" > nexus-${NEXUS_VERSION}-unix.tar.gz.sha256 \
    && sha256sum -c nexus-${NEXUS_VERSION}-unix.tar.gz.sha256 \
    && tar -xvf nexus-${NEXUS_VERSION}-unix.tar.gz \
    && rm -f nexus-${NEXUS_VERSION}-unix.tar.gz nexus-${NEXUS_VERSION}-unix.tar.gz.sha256 \
    && mv nexus-${NEXUS_VERSION} $NEXUS_HOME \
    && chown -R nexus:nexus ${SONATYPE_WORK} \
    && mv ${SONATYPE_WORK}/nexus3 ${NEXUS_DATA} \
    && ln -s ${NEXUS_DATA} ${SONATYPE_WORK}/nexus3

# Removing java memory settings from nexus.vmoptions since now we use INSTALL4J_ADD_VM_PARAMS
RUN sed -i '/^-Xms/d;/^-Xmx/d;/^-XX:MaxDirectMemorySize/d' $NEXUS_HOME/bin/nexus.vmoptions

RUN echo "#!/bin/bash" >> ${SONATYPE_DIR}/start-nexus-repository-manager.sh \
   && echo "cd /opt/sonatype/nexus" >> ${SONATYPE_DIR}/start-nexus-repository-manager.sh \
   && echo "exec ./bin/nexus run" >> ${SONATYPE_DIR}/start-nexus-repository-manager.sh \
   && chmod a+x ${SONATYPE_DIR}/start-nexus-repository-manager.sh \
   && sed -e '/^nexus-context/ s:$:${NEXUS_CONTEXT}:' -i ${NEXUS_HOME}/etc/nexus-default.properties

RUN microdnf remove -y gzip shadow-utils

VOLUME ${NEXUS_DATA}

# Copy plugin into nexus image
ARG DEPLOY_DIR=/opt/sonatype/nexus/deploy/
USER root
COPY --from=plugin-builder /opt/nexus3-github-oauth-plugin.kar ${DEPLOY_DIR}
RUN echo "github.api.url=https://api.github.com" >> /opt/sonatype/nexus/etc/githuboauth.properties &&\
    echo "github.principal.cache.ttl=PT1H" >> /opt/sonatype/nexus/etc/githuboauth.properties

ADD wss.crt /usr/local/share/ca-certificates/
COPY --from=java-cacerts /opt/java/openjdk/jre/lib/security/cacerts ${NEXUS_DATA}/custom-truststore.jks
# COPY /etc/java/java-1.8.0-openjdk/java-1.8.0-openjdk-1.8.0.372.b07-1.el8_7.x86_64/lib/security/cacerts /${NEXUS_DATA}/custom-truststore.jks
# #Import wssca certificate to Java keystore cacerts
RUN echo yes | keytool -importcert -alias wssca -trustcacerts -storepass changeit -file /usr/local/share/ca-certificates/wss.crt -keystore /${NEXUS_DATA}/custom-truststore.jks

EXPOSE 8081
USER nexus

ENV INSTALL4J_ADD_VM_PARAMS="-Xms2703m -Xmx2703m -XX:MaxDirectMemorySize=2703m -Djava.util.prefs.userRoot=${NEXUS_DATA}/javaprefs -Djavax.net.ssl.trustStore=/${NEXUS_DATA}/custom-truststore.jks -Djavax.net.ssl.trustStorePassword=changeit"

CMD ["/opt/sonatype/nexus/bin/nexus", "run"]